<?php

namespace App\Models;

use Eloquent;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Carbon;
use Spatie\Activitylog\Traits\LogsActivity;

/**
 * App\Models\CustomerRole
 *
 * @property int $id
 * @property string|null $name
 * @property Carbon|null $created_at
 * @property Carbon|null $updated_at
 * @property Carbon|null $deleted_at
 * @property-read \Illuminate\Database\Eloquent\Collection|\Spatie\Activitylog\Models\Activity[] $activities
 * @property-read int|null $activities_count
 * @method static Builder|CustomerRole newModelQuery()
 * @method static Builder|CustomerRole newQuery()
 * @method static \Illuminate\Database\Query\Builder|CustomerRole onlyTrashed()
 * @method static Builder|CustomerRole query()
 * @method static Builder|CustomerRole whereCreatedAt($value)
 * @method static Builder|CustomerRole whereDeletedAt($value)
 * @method static Builder|CustomerRole whereId($value)
 * @method static Builder|CustomerRole whereName($value)
 * @method static Builder|CustomerRole whereUpdatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|CustomerRole withTrashed()
 * @method static \Illuminate\Database\Query\Builder|CustomerRole withoutTrashed()
 * @mixin Eloquent
 */
class CustomerRole extends Model
{
  use SoftDeletes;


  protected static $logAttributes = [];
  public $timestamps = false;
  protected $guarded = [];

  protected static function boot()
  {
    parent::boot(); // TODO: Change the autogenerated stub
    static::addGlobalScope('order', function (Builder $builder) {
      $builder->orderBy('id', 'desc');
    });
    static::saving(function (Model $model) {
      static::$logAttributes = array_keys($model->getDirty());
    });
    static::updating(function (Model $model) {
      static::$logAttributes = array_keys($model->getDirty());
    });
    static::deleting(function (Model $model) {
      static::$logAttributes = array_keys($model->getDirty());
    });
  }
}
