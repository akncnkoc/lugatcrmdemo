<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;

/**
 * App\Models\InvoiceStaff
 *
 * @property-read \App\Models\Invoice|null $invoice
 * @property-read \App\Models\Staff|null $staff
 * @method static Builder|InvoiceStaff newModelQuery()
 * @method static Builder|InvoiceStaff newQuery()
 * @method static Builder|InvoiceStaff query()
 * @mixin \Eloquent
 */
class InvoiceStaff extends Model
{
  protected static $logAttributes = [];
  protected $guarded = [];

  protected static function boot()
  {
    parent::boot(); // TODO: Change the autogenerated stub
    static::addGlobalScope('order', function (Builder $builder) {
      $builder->orderBy('id', 'desc');
    });
    static::saving(function (Model $model) {
      static::$logAttributes = array_keys($model->getDirty());
    });
    static::updating(function (Model $model) {
      static::$logAttributes = array_keys($model->getDirty());
    });
    static::deleting(function (InvoiceStaff $model) {
      static::$logAttributes = array_keys($model->getDirty());
      $products = $model->invoice->invoice_products;
      foreach ($products as $product) {
        $safe = $product->safe_log->safe;
        $share = ($product->price / 100) * $model->staff_share;
        $safe->update([
          'total' => $safe->total + ($share)
        ]);
      }
    });
  }

  public function invoice()
  {
    return $this->belongsTo(Invoice::class, 'invoice_id');
  }

  public function staff()
  {
    return $this->belongsTo(Staff::class, 'staff_id')->withTrashed();
  }
}
